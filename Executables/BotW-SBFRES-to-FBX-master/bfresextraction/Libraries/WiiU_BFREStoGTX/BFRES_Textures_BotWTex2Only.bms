# Wii U - BFRES to GTX Converter for Legend of Zelda: Breath of the Wild
# For use on the "Tex2" archives *only*.
# Run the "DDS_TopMipDel.bms" script on the resulting DDS files afterwards to fix 'em.
# Written by Random Talking Bush

endian big

idstring "FRES"

goto 0x24
savepos FILEJUMP
get FILEOFFSET long
math FILEOFFSET += FILEJUMP

goto FILEOFFSET
get HEADERSIZE long
get FILETOTAL long
get UNKNOWN long
get UNKNOWN long
get UNKNOWN long
get UNKNOWN long

for i = 0 < FILETOTAL

get UNKNOWN long
get UNKNOWN long
savepos NAMEOFFSETPLUS
get NAMEOFFSET long
savepos FTEXOFFSETPLUS
get FTEXOFFSET long
math NAMEOFFSET += NAMEOFFSETPLUS
math FTEXOFFSET += FTEXOFFSETPLUS

savepos BACKTOLIST
goto NAMEOFFSET
get NAME string
putarray 0 i NAME
putarray 1 i FTEXOFFSET
goto BACKTOLIST

next i

goto 0xD070

for i = 0 < FILETOTAL

get PATH basename
string PATH - .Tex1
string PATH - .Tex2
string PATH += /
getarray NAME 0 i
getarray FTEXOFFSET 1 i
string PATH += NAME
goto FTEXOFFSET

get FTEX long
savepos WRITECHUNK
get VERSION long
get WIDTH long
get HEIGHT long

get UNKNOWN long
get UNKNOWN long
get UNKNOWN short
get FORMAT1 byte
get FORMAT2 byte
get UNKNOWN long

get UNKNOWN long
get LENGTH long
get GTXINFO long
get MIPLENGTH long

get GTXINFO long
get GTXINFO long
get GTXINFO long
get GTXINFO long

get GTXINFO long
get GTXINFO long
get GTXINFO long
get GTXINFO long

get GTXINFO long
get GTXINFO long
get GTXINFO long
get GTXINFO long

get GTXINFO long
get GTXINFO long
get GTXINFO long
get GTXINFO long

get GTXINFO long
get GTXINFO long
get GTXINFO long
get GTXINFO long

get GTXINFO long
get GTXINFO long
get GTXINFO long
get GTXINFO long

get GTXINFO long
get GTXINFO long
get GTXINFO long
get GTXINFO long

get GTXINFO long
get GTXINFO long
get GTXINFO long
get GTXINFO long

savepos DATAOFFSTART
get DATAOFFSET long
math DATAOFFSET += DATAOFFSTART
get MIPOFFSET long
math MIPOFFSET += DATAOFFSTART
get UNKNOWN long
get UNKNOWN long

log MEMORY_FILE 0 0
log MEMORY_FILE2 0 0
log MEMORY_FILE3 0 0
log MEMORY_FILE4 0 0
log MEMORY_FILE5 0 0

set MEMORY_FILE binary "\x47\x66\x78\x32\x00\x00\x00\x20\x00\x00\x00\x07\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x4C\x4B\x7B\x00\x00\x00\x20\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x0B\x00\x00\x00\x9C\x00\x00\x00\x00\x00\x00\x00\x00"
set MEMORY_FILE2 binary "\x42\x4C\x4B\x7B\x00\x00\x00\x20\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x0C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
set MEMORY_FILE4 binary "\x42\x4C\x4B\x7B\x00\x00\x00\x20\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x0D\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
set MEMORY_FILE5 binary "\x42\x4C\x4B\x7B\x00\x00\x00\x20\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
putVarChr MEMORY_FILE3 LENGTH 0
putVarChr MEMORY_FILE2 0x14 LENGTH long
putVarChr MEMORY_FILE4 0x14 MIPLENGTH long

append
log MEMORY_FILE WRITECHUNK 0x9C 0
putVarChr MEMORY_FILE 0x56 0x00 byte
log MEMORY_FILE 0 0x20 MEMORY_FILE2
log MEMORY_FILE 0 LENGTH MEMORY_FILE3
log MEMORY_FILE 0 0x20 MEMORY_FILE4
log MEMORY_FILE DATAOFFSET MIPLENGTH 0
log MEMORY_FILE 0 0x20 MEMORY_FILE5
append

get SIZE asize MEMORY_FILE
string PATH + .gtx
log PATH 0 SIZE MEMORY_FILE

next i

endfunction